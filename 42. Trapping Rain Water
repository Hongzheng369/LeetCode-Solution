class Solution {
    public static int trap(int[] height) {
        int leftEdge = Integer.MIN_VALUE, maxHeight = Integer.MIN_VALUE, rightEdge = Integer.MIN_VALUE;
        int resFromLeft = 0, resFromRight = 0, sumHeight = 0;
        for (int i = 0; i < height.length; i++){
            maxHeight = Math.max(maxHeight, height[i]);
            sumHeight += height[i];
            if (height[i] > leftEdge)
                leftEdge = height[i];
            else
                resFromLeft += (leftEdge - height[i]);
        }
        for (int i = height.length - 1; i >=0; i--){
            if (height[i] > rightEdge)
                rightEdge = height[i];
            else
                resFromRight += (rightEdge - height[i]);
        }
        return resFromLeft + resFromRight - (maxHeight * height.length - sumHeight);
    }
}
