class Solution {
    public int minDistance(String word1, String word2) {
        if (word1.length() == 0 || word2.length() == 0) {
            return word1.length() + word2.length();
        }
        
        int[][] ans = new int[word1.length() + 1][word2.length() + 1];
        for (int i = 0; i < ans.length; i++) {
            ans[i][0] = i;
        }
        for (int i = 0; i < ans[0].length; i++) {
            ans[0][i] = i;
        }
        
        for (int i = 1; i < ans.length; i++) {
            for (int j = 1; j < ans[0].length; j++) {
                if (word1.charAt(i - 1) == word2.charAt(j - 1)) {
                    ans[i][j] = 1 + Math.min(ans[i - 1][j - 1] - 1, Math.min(ans[i - 1][j], ans[i][j - 1]));
                }
                else {
                    ans[i][j] = 1 + Math.min(ans[i - 1][j - 1], Math.min(ans[i - 1][j], ans[i][j - 1]));
                }
            }
        }        
        
        return ans[word1.length()][word2.length()];
    }
}
