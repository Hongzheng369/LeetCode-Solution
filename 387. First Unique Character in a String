class Solution {
    // Method 1: build a map for this string.
    /*
    public int firstUniqChar(String s) {
        if (s == null || s.length() == 0) {
            return -1;
        }
        if (s.length() < 2) {
            return 0;
        }
        
        HashMap<Character, Integer> map = new HashMap<>();
        char[] arr = s.toCharArray();
        for (char c : arr) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        
        for (int i = 0; i < arr.length; i++) {
            if (map.get(arr[i]) == 1) {
                return i;
            }
        }
        
        return -1;
    }*/
    
    // Method 2: using the method from String class.
    public int firstUniqChar(String s) {
        int result = Integer.MAX_VALUE;
        
        for (char c = 'a'; c <= 'z'; c++) {
            int id = s.indexOf(c);
            
            if (id != -1 && id == s.lastIndexOf(c)) {
                result = Math.min(result, id);
            }
        }
        
        return (result == Integer.MAX_VALUE) ? -1 : result;
    }
}
