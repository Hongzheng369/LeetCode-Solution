/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    // Method 1: Return the value according to in-order sequence.
    /*
    public int kthSmallest(TreeNode root, int k) {
        if (root == null) {
            return Integer.MIN_VALUE;
        }
        
        Stack<TreeNode> stack = new Stack<>();
        TreeNode traverse = root;
        int count = 0;
        
        while (!stack.isEmpty() || traverse != null) {
            while (traverse != null) {
                stack.push(traverse);
                traverse = traverse.left;
            }
            
            traverse = stack.pop();
            count++;
            if (count == k) {
                break;
            }
            traverse = traverse.right;
        }
        
        return traverse.val;
    }
    */
    
    // Method 2. 
    int res = 0;
    int count = 0;
    
    public int kthSmallest(TreeNode root, int k) {
        if (root == null) {
            return res;
        }
        
        kthSmallest(root.left, k);
        count++;
        if (count == k) {
            res = root.val;
        }
        kthSmallest(root.right, k);
        
        return res;
    }
}
