class Solution {
    public int calculate(String s) {
        /** Method 1: using stack. */
//         Stack<Integer> stack = new Stack<>();
//         int num = 0;
//         char sign = '+';

//         for (int i = 0; i < s.length(); i++) {
//             char ch = s.charAt(i);

//             if (Character.isDigit(ch)) {
//                 num = num * 10 + (ch - '0');
//             }

//             if (!Character.isDigit(ch) && ch != ' ' || i == s.length() - 1) {
//                 if (sign == '+') {
//                     stack.push(num);
//                 } else if (sign == '-') {
//                     stack.push(-num);
//                 } else if (sign == '*') {
//                     stack.push(stack.pop() * num);
//                 } else {
//                     stack.push(stack.pop() / num);
//                 }

//                 num = 0;
//                 sign = ch;
//             }
//         }

//         int ans = 0;
//         for (int i : stack) {
//             ans += i;
//         }
//         return ans;
        
        /** Method 2: without stack. */
        char[] chars = s.toCharArray();
        int num = 0;
        char sign = '+';
        int lastNum = 0;
        int ans = 0;

        for (int i = 0; i < chars.length + 1; i++) {
            if (i < chars.length && Character.isDigit(chars[i])) {
                num = num * 10 + (chars[i] - '0');
            } else {
                if (i < chars.length && chars[i] == ' ') {
                    continue;
                }

                if (sign == '+') {
                    ans += num;
                    lastNum = num;
                } else if (sign == '-') {
                    ans -= num;
                    lastNum = -num;
                } else if (sign == '*') {
                    ans = (ans - lastNum) + lastNum * num;
                    lastNum = lastNum * num;
                } else if (sign == '/') {
                    ans = (ans - lastNum) + lastNum / num;
                    lastNum = lastNum / num;
                }

                if (i < chars.length) {
                    sign = chars[i];
                }
                num = 0;
            }
        }
        
        return ans;
    }
}
