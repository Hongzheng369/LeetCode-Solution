class Solution {
    public int leastInterval(char[] tasks, int n) {
        if (n == 0) {
            return tasks.length;
        }
        Map<Character, Integer> map = new HashMap<>();
        int maxAppear = 0;
        for (char c : tasks) {
            map.put(c, map.getOrDefault(c, 0) + 1);
            maxAppear = Math.max(maxAppear, map.get(c));
        }
        int sameAppear = 0;
        for (int i : map.values()) {
            if (i == maxAppear) {
                sameAppear++;
            }
        }
        return Math.max(tasks.length, (maxAppear - 1) * (n + 1) + sameAppear);
    }
}
