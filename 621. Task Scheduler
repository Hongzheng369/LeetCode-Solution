class Solution {
    public int leastInterval(char[] tasks, int n) {
        if (n == 0) {
            return tasks.length;
        }
        
        Map<Character, Integer> appear = new HashMap<>();
        int maxAppear = 0;
        for (char ch : tasks) {
            appear.put(ch, appear.getOrDefault(ch, 0) + 1);
            maxAppear = Math.max(maxAppear, appear.get(ch));
        }
        
        int sameAppear = 0;
        for (Integer i : appear.values()) {
            if ((int)i == maxAppear) {
                sameAppear++;
            }
        }
        
        return Math.max(tasks.length, (n + 1) * (maxAppear - 1) + sameAppear);
    }
}
