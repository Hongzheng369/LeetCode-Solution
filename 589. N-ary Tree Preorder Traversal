/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<Integer> preorder(Node root) {
        List<Integer> ans = new ArrayList<>();
        helperPre(ans, root);
        return ans;
    }
    public void helperPre(List<Integer> ans, Node node) {
        if (node == null) {
            return;
        }
        ans.add(node.val);
        if (node.children.size() == 0 || node.children == null) {
            return;
        }
        for (int i = 0; i < node.children.size(); i++){
            helperPre(ans, node.children.get(i));
        }
        return;
    }
}
