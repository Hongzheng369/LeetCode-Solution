class Solution {
    LinkedList<String> result = new LinkedList<>();
    Map<String, PriorityQueue<String>> availableDst = new HashMap<>();
    
    public List<String> findItinerary(List<List<String>> tickets) {
        for (List<String> list : tickets) {
            if (!availableDst.containsKey(list.get(0))) {
                availableDst.put(list.get(0), new PriorityQueue<>());
            }
            availableDst.get(list.get(0)).add(list.get(1));
        }
        
        System.out.println(availableDst);
        
        dfs("JFK");
        return result;
    }
    
    private void dfs(String s) {
        PriorityQueue<String> queue = availableDst.get(s);
        System.out.println(s);
        while (queue != null && !queue.isEmpty()) {
            dfs(queue.remove());
        }
        
        result.addFirst(s);
    }
}
