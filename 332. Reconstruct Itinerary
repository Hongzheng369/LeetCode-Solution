class Solution {
    HashMap<String, PriorityQueue<String>> map = new HashMap<String, PriorityQueue<String>>();
	LinkedList<String> result = new LinkedList<String>();
 
	public List<String> findItinerary(String[][] tickets) {
		for (String[] ticket : tickets) {
			if (!map.containsKey(ticket[0])) {
				map.put(ticket[0], new PriorityQueue<String>());
			}
			map.get(ticket[0]).offer(ticket[1]);
		}
 
        dfs("JFK");
		return result;
	}
 
	public void dfs(String s) {
        // Reach the end, then start adding.
		PriorityQueue<String> queue = map.get(s);
 
		while (queue != null && !queue.isEmpty()) {
			dfs(queue.poll());
		}
 
		result.addFirst(s);
	}
}
