class Solution {
    // Method 1: using array.
    /*public boolean canConstruct(String ransomNote, String magazine) {
        int[] map = new int[26];
        for (char ch : magazine.toCharArray()) {
            map[ch - 'a']++;
        }
        for (char ch : ransomNote.toCharArray()) {
            if (map[ch - 'a'] == 0) {
                return false;
            } else {
                map[ch - 'a']--;
            }
        }
        return true;
    }*/
    
    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character, Integer> map1 = new HashMap<>();
        Map<Character, Integer> map2 = new HashMap<>();
        for (char ch : ransomNote.toCharArray()) {
            map1.put(ch, map1.getOrDefault(ch, 0) + 1);
        }
        for (char ch : magazine.toCharArray()) {
            map2.put(ch, map2.getOrDefault(ch, 0) + 1);
        }
        
        int size1 = map1.size();
        int size2 = map2.size();
        
        if (size1 > size2) {
            return false;
        } else {
            for (char ch : map1.keySet()) {
                if (!map2.containsKey(ch) || map1.get(ch) > map2.get(ch)) {
                    return false;
                }
            }
            return true;
        }
    }
}
