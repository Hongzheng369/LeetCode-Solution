# 形似二分查找，mid - 1、mid、mid + 1这三个位置上的数会分成以下几种情况：
# 一直递增、一直递减、先递增后递减、先递减后递增。
# 根据这几种情况做处理就好。

# 代码如下：

class Solution {
    public int findPeakElement(int[] nums) {
        if (nums.length < 2)
            return 0;
        int head = 0;
        int tail = nums.length - 1;
        while (head < tail - 1){
            int mid = (tail - head) / 2 + head;
            if (nums[mid - 1] < nums[mid] && nums[mid] > nums[mid + 1])
                return mid;
            else if (nums[mid - 1] < nums[mid] && nums[mid] < nums[mid + 1])
                head = mid;
            else if (nums[mid - 1] > nums[mid] && nums[mid] > nums[mid + 1])
                tail = mid;
            else
                tail = mid;
        }
        return nums[head] > nums[tail] ? head : tail;
    }
}
