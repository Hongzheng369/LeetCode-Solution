class Solution {
    static HashMap<Integer, String> map = new HashMap<>();
    public static String numberToWords(int num) {
        buildMap();
        StringBuilder res = new StringBuilder();

        if (num == 0)
            return map.get(0);
        if (num >= 1000000000){
            res.append(perThree(num / 1000000000) + " Billion");
            num = num % 1000000000;
        }
        if (num >= 1000000){
            res.append(perThree(num / 1000000) + " Million");
            num = num % 1000000;
        }
        if (num >= 1000){
            res.append(perThree(num / 1000) + " Thousand");
            num = num % 1000;
        }
        if (num >= 0)
            res.append(perThree(num));

        return res.toString().trim();
    }
    //Getting a StringBuilder that contains three digits.
    public static StringBuilder perThree(int num){
        StringBuilder res = new StringBuilder();
        if (num >= 100){
            res.append(" " + map.get(num / 100) + " Hundred");
            num = num % 100;
        }
        if (num > 0){
            if (num < 20){
                res.append(" " + map.get(num));
            }
            else{
                res.append(" " + map.get(num / 10 * 10));
                num = num % 10;
                if (num > 0)
                    res.append(" " + map.get(num));
            }
        }
        return res;
    }
    //This is used to fill the "Dictionary".
    public static void buildMap(){
        map.put(0, "Zero");
        map.put(1, "One");
        map.put(2, "Two");
        map.put(3, "Three");
        map.put(4, "Four");
        map.put(5, "Five");
        map.put(6, "Six");
        map.put(7, "Seven");
        map.put(8, "Eight");
        map.put(9, "Nine");
        map.put(10, "Ten");
        map.put(11, "Eleven");
        map.put(12, "Twelve");
        map.put(13, "Thirteen");
        map.put(14, "Fourteen");
        map.put(15, "Fifteen");
        map.put(16, "Sixteen");
        map.put(17, "Seventeen");
        map.put(18, "Eighteen");
        map.put(19, "Nineteen");
        map.put(20, "Twenty");
        map.put(30, "Thirty");
        map.put(40, "Forty");
        map.put(50, "Fifty");
        map.put(60, "Sixty");
        map.put(70, "Seventy");
        map.put(80, "Eighty");
        map.put(90, "Ninety");
    }
}
