/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        if (root == null) {
            return 0;
        }
        
        return profit(new HashMap<>(), root);
    }
    
    private int profit(Map<TreeNode, Integer> sum, TreeNode node) {
        if (node == null) {
            return 0;
        } else if (sum.containsKey(node)) {
            return sum.get(node);
        }
        
        int val1 = node.val;
        if (node.left != null) {
            val1 += profit(sum, node.left.left) + profit(sum, node.left.right);
        }
        if (node.right != null) {
            val1 += profit(sum, node.right.left) + profit(sum, node.right.right);
        }
        
        int val2 = profit(sum, node.left) + profit(sum, node.right);
        
        int maxVal = Math.max(val1, val2);
        sum.put(node, maxVal);
        return maxVal;
    }
}
