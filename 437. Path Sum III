/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
	int ans;
    Map<Integer, Integer> map;

    public int pathSum(TreeNode root, int sum) {
        if (root == null) {
            return 0;
        }
        map = new HashMap<>();
        map.put(0, 1);
        ans = 0;
        helper(root, 0, sum);
        return ans;
    }

    private void helper(TreeNode root, int curSum, int sum) {
        if (root == null) {
            return;
        }
        curSum += root.val;
        ans += (map.containsKey(curSum - sum) ? map.get(curSum - sum) : 0);
        map.put(curSum, map.getOrDefault(curSum, 0) + 1);
        helper(root.left, curSum, sum);
        helper(root.right, curSum, sum);
        map.put(curSum, map.get(curSum) - 1);
    }
}
