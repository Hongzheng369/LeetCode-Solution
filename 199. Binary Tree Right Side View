/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //Do BFS, and every traverse we'll put the last element from traverse sequence to "res".
    public static List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        //Handle the base case.
        if (root == null){
            return res;
        }
        //Do BFS.
        Queue<TreeNode> level = new LinkedList<>();
        level.add(root);
        while (!level.isEmpty()){
            int lenForThisLevel = level.size();
            for (int i = 0; i < lenForThisLevel; i++){
                TreeNode tmp = level.remove();
                if (i == lenForThisLevel - 1){
                    res.add(tmp.val);
                }
                if (tmp.left != null){
                    level.add(tmp.left);
                }
                if (tmp.right != null){
                    level.add(tmp.right);
                }
            }
        }
        return res;
    }
}
