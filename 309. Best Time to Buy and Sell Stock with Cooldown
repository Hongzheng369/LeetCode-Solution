// It's a problem of state changing.

class Solution {
    public int maxProfit(int[] prices) {
        if (prices == null || prices.length < 2) {
            return 0;
        }
        
        // S0: cooldown. S1: buy. S2: sell.
        int S0 = 0, S1 = 0, S2 = 0;
        int prevS0 = 0, prevS1 = -prices[0], prevS2 = 0;
        
        for (int price : prices) {
            S0 = Math.max(prevS0, prevS2);
            S1 = Math.max(prevS1, prevS0 - price);
            S2 = prevS1 + price;
            prevS0 = S0;
            prevS1 = S1;
            prevS2 = S2;
        }
        
        return Math.max(prevS0, prevS2);
    }
}
