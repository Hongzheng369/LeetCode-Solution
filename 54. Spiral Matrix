class Solution {
    public static List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<>();
        if (matrix == null || matrix.length == 0){
            return res;
        }
        int up = 0, down = matrix.length - 1, left = 0, right = matrix[0].length - 1;
        while (up <= down && left <= right){
            // Go right.
            for (int i = left; i <= right; i++){
                res.add(matrix[up][i]);
            }
            // Go down.
            for (int i = up + 1; i <= down; i++){
                res.add(matrix[i][right]);
            }
            if (up < down && left < right){
                // Go left.
                for (int i = right - 1; i > left; i--){
                    res.add(matrix[down][i]);
                }
                // Go up.
                for (int i = down; i > up; i--){
                    res.add(matrix[i][left]);
                }
            }
            up++;
            right--;
            down--;
            left++;
        }
        return res;
    }
}
