class Solution {
    public int longestPalindromeSubseq(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        
        int len = s.length();
        int[][] palinLen = new int[len][len];       // palinLen[i][j] = LPS from index i to index j.
        for (int i = len - 1; i > -1; i--) {
            palinLen[i][i] = 1;
            
            for (int j = i + 1; j < len; j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    palinLen[i][j] = palinLen[i + 1][j - 1] + 2;
                } else {
                    palinLen[i][j] = Math.max(palinLen[i + 1][j], palinLen[i][j - 1]);
                }
            }
        }
        
        return palinLen[0][len - 1];
    }
}
