import java.util.HashSet;
import java.util.Set;

public class ReverseVowelsofaString {
    // Method 1. Use hashset.
    /*
    public String reverseVowels(String s) {
        if (s == null || s.length() < 2) {
            return s;
        }
        char[] arr = s.toCharArray();
        int left = 0;
        int right = arr.length - 1;
        Set<Character> set=new HashSet<>();
        set.add('a');
        set.add('e');
        set.add('i');
        set.add('o');
        set.add('u');
        set.add('A');
        set.add('E');
        set.add('I');
        set.add('O');
        set.add('U');
        while (left < right) {
            while (left < right && !set.contains(arr[left])) {
                left++;
            }
            while (left < right && !set.contains(arr[right])) {
                right--;
            }
            char ch = arr[left];
            arr[left++] = arr[right];
            arr[right--] = ch;
        }
        return String.valueOf(arr);
    }*/

    // Method 2.
    public String reverseVowels(String s) {
        boolean[] cs = new boolean[256];
        cs['a'] = true;
        cs['e'] = true;
        cs['i'] = true;
        cs['o'] = true;
        cs['u'] = true;
        cs['A'] = true;
        cs['E'] = true;
        cs['I'] = true;
        cs['O'] = true;
        cs['U'] = true;
        char[] arr = s.toCharArray();
        for (int i = 0, j = arr.length - 1; i < j;) {
            if (cs[arr[i]] && cs[arr[j]]) {
                char c = arr[i];
                arr[i++] = arr[j];
                arr[j--] = c;
            } else if (cs[arr[i]]) {
                j--;
            } else {                    // In this case, there are two conditions.
                i++;                    // 1. cs[arr[i]] == false && cs[arr[j]] = false.       2. cs[arr[i]] = false && cs[arr[j]] = true.
            }
        }

        return String.valueOf(arr);
    }
}
