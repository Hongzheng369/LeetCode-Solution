class MyHashMap {
    class ListNode {
        int key, val;
        ListNode next;
        ListNode(int k, int v) {
            key = k;
            val = v;
        }
    }
    
    private int getIndex(int key) {
        return Integer.hashCode(key) % map.length;
    }
    
    private ListNode findPrevOrEnd(ListNode head, int key) {
        ListNode prev = null;
        ListNode node = head;
        while (node != null && node.key != key) {
            prev = node;
            node = node.next;
        }
        return prev;
    }
    
    ListNode[] map;
    
    /** Initialize your data structure here. */
    public MyHashMap() {
        map = new ListNode[10000];
    }
    
    /** value will always be non-negative. */
    public void put(int key, int value) {
        int index = getIndex(key);
        if (map[index] == null) {
            map[index] = new ListNode(-1, -1);
        }
        
        ListNode node = findPrevOrEnd(map[index], key);
        if (node.next == null) {
            node.next = new ListNode(key, value);
        } else {
            node.next.val = value;
        }
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    public int get(int key) {
        int index = getIndex(key);
        if (map[index] == null) {
            return -1;
        }
        
        ListNode node = findPrevOrEnd(map[index], key);
        return (node.next == null ? -1 : node.next.val);
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    public void remove(int key) {
        int index = getIndex(key);
        if (map[index] == null) {
            return;
        }
        
        ListNode node = findPrevOrEnd(map[index], key);
        if (node.next == null) {
            return;
        } else {
            node.next = node.next.next;
            return;
        }
    }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */
