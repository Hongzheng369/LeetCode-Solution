class Solution {
    // Method 1: time limit exceeded. But still a good start...
    /*public int subarraysDivByK(int[] A, int K) {
        int sum = 0;
        for (int i = 0; i < A.length; i++) {
            sum += A[i];
            A[i] = sum;
        }
        
        int count = 0;
        for (int i = 0; i < A.length; i++) {
            for (int j = 0; j < i; j++) {
                if ((A[i] - A[j]) % K == 0) {
                    count++;
                }
            }
            if (A[i] % K == 0) {
                count++;
            }
        }
        
        return count;
    }*/
    
    // Method 2: based on method 1, divide these data according to the remainder.
    public int subarraysDivByK(int[] A, int K) {
        int len = A.length;
        int[] sums = new int[len + 1];
        for (int i = 1; i < len + 1; i++) {
            sums[i] = sums[i - 1] + A[i - 1];
        }
        
        int[] remainder = new int[K];
        for (int sum : sums) {
            remainder[(sum % K + K) % K]++;
        }
        
        int ans = 0;
        for (int i = 0; i < K; i++) {
            ans += remainder[i] * (remainder[i] - 1) / 2;
        }
        return ans;
    }
}
