class Solution {
    
    boolean isFile = false;
    
    public int lengthLongestPath(String input) {
        String[] levels = input.split("\n");
        String path = new String();
        int longestPath = 0;
        for (String part : levels) {
            int tab = countTab(part);
            path = buildPath(path, part, tab);
            if (isFile) {
                longestPath = Math.max(longestPath, path.length());
                isFile = false;
            }
        }
        return longestPath;
    }
    
    private int countTab(String s) {
        int len = s.length();
        int count = 0;
        for (int i = 0; i < len; i++) {
            char c = s.charAt(i);
            if (c == '\t') {
                count++;
            }
            else if (!isFile && c == '.') {
                isFile = true;
                break;
            }
        }
        return count;
    }
    
    private String buildPath(String path, String part, int tab) {
        if (tab == 0) {
            return part;
        }
        part = part.substring(tab);
        int len = path.length();
        int count = 0;
        int index = 0;
        while (index < len) {
            char c = path.charAt(index);
            if (c == '/') {
                count++;
                if (count == tab) {
                    break;
                }
            }
            index++;
        }
        if (index == len) {
            return path + "/" + part;
        }
        return path.substring(0, index + 1) + part;
    }
}
